# Generated by Django 4.0.1 on 2022-07-29 18:07

import ckeditor.fields
import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProfileUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.CharField(choices=[('vendor', 'vendror'), ('shipper', 'shipper')], max_length=255)),
                ('store_name', models.CharField(blank=True, default=uuid.uuid1, error_messages={'unique': 'The store must be unique '}, max_length=100, unique=True)),
                ('sotre_banner', cloudinary.models.CloudinaryField(default='v1645988134/default/1_yf3l0n.jpg', max_length=255, verbose_name='media/uploads/vendors')),
                ('sotre_logo', cloudinary.models.CloudinaryField(default='v1645988456/default/1.jpg', max_length=255, verbose_name='media/uploads/vendors')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('Shipping_Policy', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('Refund_Policy', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('Return_Policy', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('facebook_link', models.URLField(blank=True, max_length=255, null=True)),
                ('twitter_link', models.URLField(blank=True, max_length=255, null=True)),
                ('instagram_link', models.URLField(blank=True, max_length=255, null=True)),
                ('watsapp_link', models.IntegerField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ManyToManyField(related_name='vendor_products', to='product.Product')),
                ('shippers', models.ManyToManyField(blank=True, related_name='shippers', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'vendor_profile',
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('send', 'send'), ('accepted', 'accepted')], max_length=8)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='user.profileuser')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='user.profileuser')),
            ],
        ),
    ]
